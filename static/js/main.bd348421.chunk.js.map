{"version":3,"sources":["Converter/functions.js","Converter/Converter.js","Display/Display.js","App/App.js","registerServiceWorker.js","index.js"],"names":["lP","value","length","Array","toString","fill","join","books","Converter","state","textArea","_onTextChange","bind","_onConvert","event","this","setState","target","props","onConvert","textToConvert","bcv","bcvParser","require","bcv_parser","verses","parse","parsed_entities","parsedVerse","osis","compiledEntities","reduce","arr","v","concat","entities","converted","str","entity","newString","JSON","stringify","start","end","indexOf","b","c","convert","className","onClick","placeholder","onChange","Component","Display","split","map","i","key","App","convertedVerses","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bd348421.chunk.js","sourcesContent":["const lP = (value, length) =>\n  new Array(length - value.toString().length).fill(0).join(\"\") + value\n\nconst books = [\n  \"Gen\",\n  \"Exod\",\n  \"Lev\",\n  \"Num\",\n  \"Deut\",\n  \"Josh\",\n  \"Judg\",\n  \"Ruth\",\n  \"1Sam\",\n  \"2Sam\",\n  \"1Kgs\",\n  \"2Kgs\",\n  \"1Chr\",\n  \"2Chr\",\n  \"Ezra\",\n  \"Neh\",\n  \"Esth\",\n  \"Job\",\n  \"Ps\",\n  \"Prov\",\n  \"Eccl\",\n  \"Song\",\n  \"Isa\",\n  \"Jer\",\n  \"Lam\",\n  \"Ezek\",\n  \"Dan\",\n  \"Hos\",\n  \"Joel\",\n  \"Amos\",\n  \"Obad\",\n  \"Jonah\",\n  \"Mic\",\n  \"Nah\",\n  \"Hab\",\n  \"Zeph\",\n  \"Hag\",\n  \"Zech\",\n  \"Mal\",\n  \"Matt\",\n  \"Mark\",\n  \"Luke\",\n  \"John\",\n  \"Acts\",\n  \"Rom\",\n  \"1Cor\",\n  \"2Cor\",\n  \"Gal\",\n  \"Eph\",\n  \"Phil\",\n  \"Col\",\n  \"1Thess\",\n  \"2Thess\",\n  \"1Tim\",\n  \"2Tim\",\n  \"Titus\",\n  \"Phlm\",\n  \"Heb\",\n  \"Jas\",\n  \"1Pet\",\n  \"2Pet\",\n  \"1John\",\n  \"2John\",\n  \"3John\",\n  \"Jude\",\n  \"Rev\",\n]\n\nconst convert = textToConvert => {\n  const bcvParser = require(\"bible-passage-reference-parser/js/en_bcv_parser\")\n    .bcv_parser\n  const bcv = new bcvParser()\n\n  // setup variables\n  const verses = bcv.parse(textToConvert).parsed_entities()\n  const parsedVerse = bcv.parse(textToConvert).osis()\n\n  // const complied entities\n  const compiledEntities = verses.reduce((arr, v) => {\n    return arr.concat(v.entities)\n  }, [])\n\n  // // convert new verses\n  const newVerses = !verses[0]\n    ? null\n    : compiledEntities.reduce((str, entity) => {\n      // setup variables\n      const newString =\n          JSON.stringify(entity.start) === JSON.stringify(entity.end)\n            ? `${lP(books.indexOf(entity.start.b) + 1, 2)}.${lP(\n              entity.start.c,\n              3\n            )}.${lP(entity.start.v, 3)}`\n            : `${lP(books.indexOf(entity.start.b) + 1, 2)}.${lP(\n              entity.start.c,\n              3\n            )}.${lP(entity.start.v, 3)}-${lP(\n              books.indexOf(entity.end.b) + 1,\n              2\n            )}.${lP(entity.end.c, 3)}.${lP(entity.end.v, 3)}`\n\n      return str === \"\" ? newString : str + \";;\" + newString\n    }, \"\")\n\n  return { converted: newVerses, verses: parsedVerse }\n}\n\nexport { convert }\n","// react imports\nimport React, { Component } from \"react\"\n\n// functions\nimport { convert } from \"./functions\"\n\nclass Converter extends Component {\n  // setup the constructor\n  constructor() {\n    super()\n\n    this.state = {\n      textArea: \"\",\n    }\n\n    this._onTextChange = this._onTextChange.bind(this)\n    this._onConvert = this._onConvert.bind(this)\n  }\n\n  _onTextChange(event) {\n    this.setState({ textArea: event.target.value })\n  }\n\n  _onConvert() {\n    const { textArea } = this.state\n    this.props.onConvert(convert(textArea))\n  }\n\n  render() {\n    const { textArea } = this.state\n\n    return (\n      <div className=\"converter\">\n        <label className=\"header\">\n          Text To Convert\n          <span className=\"button\" onClick={this._onConvert}>\n            Convert\n          </span>\n        </label>\n        <textarea\n          placeholder=\"Text To Convert\"\n          value={textArea}\n          onChange={this._onTextChange.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Converter\n","// react imports\nimport React, { Component } from \"react\"\n\nclass Display extends Component {\n  render() {\n    const { converted, verses } = this.props\n\n    return (\n      <div className=\"display\">\n        <div className=\"parsed\">\n          <label className=\"header\"> Conversions </label>\n          <span> {converted} </span>\n        </div>\n        <div className=\"found\">\n          <label className=\"header\"> What We Found </label>\n          <ul> {verses.split(\",\").map((v, i) => <li key={i}> {v} </li>)} </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Display\n","import React, { Component } from \"react\"\n\nimport Converter from \"../Converter/Converter\"\nimport Display from \"../Display/Display\"\n\nclass App extends Component {\n  // setup the constructor\n  constructor(props) {\n    // declares this the constructor\n    super(props)\n\n    this.state = {\n      convertedVerses: \"\",\n      verses: \"\",\n    }\n  }\n\n  onConvert({ converted, verses }) {\n    this.setState({\n      converted: converted,\n      verses: verses,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"base\">\n        <header> Bible Verse Converter </header>\n        <div className=\"card\">\n          <Converter onConvert={this.onConvert.bind(this)} />\n          <Display\n            converted={this.state.converted}\n            verses={this.state.verses}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App/App.js\"\nimport registerServiceWorker from \"./registerServiceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\nregisterServiceWorker()\n"],"sourceRoot":""}